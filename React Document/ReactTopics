#####Spread attribute: passes two props to the component
const props = {a: 1 , b: 2};
const element = <Sum {...props}/>; //passing two props

#####STATES:
const [houses, setHouses] = useState(houseArray;)

const addHouse = () => {
  setHouses([
    ...houses, 
    {
      id: 3,
      address: "Lewisville TX"
    }
  ]);
};

<button onClick={addHouse}>

#####Calling setFunctiion(State) in child components
//app.js
const[selectedHouse, setSelectedHouse] = useState();
{seletedHouse ? (
  <House house={selectedHouse}/>
) : (
  <HouseList selectedHouse={setSelectedHouse}/>
)
}

.....child component HouseRow.....
<tr onClick={() => selectHouse(house)}>

#####Create wrapper function: to give component full control to its state
//app.js
const setSelectedHouseWrapper = useCallback((house) => {
  setSelectedHouse(house);
}, []);

.....
<HouseList selectedHouse={setSelectedHouseWrapper}/>





